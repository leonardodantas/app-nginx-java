version: '3'
services:
  loadbalance:
    build:
      context: nginx
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
    networks:
      - rede-docker-compose
    depends_on:
      - testes-carga-java-1
      - testes-carga-java-2
  testes-carga-mongodb:
    networks:
      - rede-docker-compose
    image: mongo:4.2.23
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=leonardo
      - MONGO_INITDB_ROOT_PASSWORD=123456
    volumes:
      - /private/var/lib/mongodb:/var/lib/mongodb
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '0.75GB'
  testes-carga-java-1:
    networks:
      - rede-docker-compose
    depends_on:
      - testes-carga-mongodb
      - teste-carga-kafka
    build:
      ./app-testes-carga-java/
    ports:
      - "8081:8080"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.40'
          memory: '0.50GB'
  testes-carga-java-2:
    networks:
      - rede-docker-compose
    depends_on:
      - testes-carga-mongodb
      - teste-carga-kafka
    build:
      ./app-testes-carga-java/
    ports:
      - "8082:8080"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.40'
          memory: '0.50GB'
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  teste-carga-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
networks:
  rede-docker-compose:
    driver: bridge